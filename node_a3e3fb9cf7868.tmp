var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');
// my own
var expresshsb = require('express-handlebars');
var mongoose = require('mongoose');

mongoose.connect('mongodb://localhost:27017/shopping', {
  useNewUrlParser: true
}, (err) => {
  if (err)
    console.log('Unable to connect to MongoDB');
});

var indexRouter = require('./routes/index');


var app = express();

// view engine setup
app.engine('.hbs', expresshsb({
  defaultLayout: 'layout',
  extname: '.hbs'
}));
app.set('view engine', '.hbs');

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({
  extended: false
}));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', indexRouter);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  next(createError(404));
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
app.listen('3000', () => {
  console.log('Server has Started');
})